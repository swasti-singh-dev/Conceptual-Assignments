Q1. What is the purpose of Python's OOP?

Sol. The main purpose behind OOP is to bind the functions and objects which works on a problem together, so that they can be separated from rest of the program and can be used again and again to target the similar type of problem.



Q2. Where does an inheritance search look for an attribute?

Sol. The search works on bottom-up approach, where the search looks for attribute in the nearest object then in all the classes above it. The search ends the moment it finds the attribute. The term inheritance is applied because objects lower in a tree inherit attributes attached to objects higher in that tree.




Q3. How do you distinguish between a class object and an instance object?

Sol. ----Need help with the solution----



Q4. What makes the first argument in a class’s method function special?

Sol. The class method including __init__, have the first parameter as self. The self keyword is used to represent an instance (object) of the given class. Self allows access to the attributes and methods of each object in python. This allows each object to have its own attributes and methods. Thus, even long before creating these objects, we reference the objects as self while defining the class.




Q5. What is the purpose of the __init__ method?

Sol. The __init__  function is called every time an object is created from a class. The __init__ method lets the class initialize the object’s attributes and serves no other purpose. It is only used within classes.



Q6. What is the process for creating a class instance?
 
Sol. To create instances of a class, you call the class using class name and pass in whatever arguments its __init__ method accepts.

"This would create first object of Employee class"
emp1 = Employee("Zara", 2000)
"This would create second object of Employee class"
emp2 = Employee("Manni", 5000)




Q7. What is the process for creating a class?

Sol. The class statement creates a new class definition. The name of the class immediately follows the keyword class followed by a colon as follows –
class ClassName


Q8. How would you define the superclasses of a class?

Sol. public class Bicycle {}
        public class MountainBike extends Bicycle {}
       
       In the above example  MountainBike is subclass and Bicyle is the Super class.



